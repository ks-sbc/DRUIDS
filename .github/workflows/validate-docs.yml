name: Validate Documentation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest yamllint

      - name: Validate YAML files
        run: |
          yamllint -c .yamllint.yml mkdocs.yml
          find . -name "*.yml" -o -name "*.yaml" | grep -v .github | xargs yamllint -c .yamllint.yml

      - name: Validate MkDocs configuration
        run: python tests/validate_config.py

      - name: Validate blog posts
        run: python tests/validate_blog_posts.py

      - name: Test MkDocs build (strict mode)
        run: mkdocs build --clean --strict

      - name: Run pytest
        run: pytest tests/ -v

      - name: Check for broken links (if linkchecker is available)
        run: |
          if command -v linkchecker &> /dev/null; then
            mkdocs serve --dev-addr=127.0.0.1:8000 &
            sleep 5
            linkchecker http://127.0.0.1:8000 --check-extern
            pkill -f "mkdocs serve"
          else
            echo "Linkchecker not available, skipping link validation"
          fi
        continue-on-error: true

  # Separate job for deployment (only on main branch)
  deploy:
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for git-revision-date-localized

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build documentation
        run: mkdocs build --clean

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          cname: yourdomain.com # Replace with your custom domain if you have one
